---
- name: Delete the server file
  ansible.builtin.file:
    path: "{{ http_server_path }}/server.py"
    state: absent

- name: Create web server python script
  ansible.builtin.lineinfile:
    create: true
    dest: "{{ http_server_path }}/server.py"
    mode: '0755'
    line: |
      import os
      from http.server import HTTPServer, CGIHTTPRequestHandler
      # Make sure the server is created at current directory
      os.chdir('.')
      # Create server object listening the port {{ http_server_port | default('7654') }}
      server_object = HTTPServer(server_address=('', {{ http_server_port | default('7654') }}), RequestHandlerClass=CGIHTTPRequestHandler)
      # Start the web server
      server_object.serve_forever()

- name: Scan any process using this port
  ansible.builtin.shell: |
    set -o pipefail && lsof -n -i :{{ http_server_port | default('7654') }} | grep LISTEN | cut -f 2 -d " "
  register: port_scan
  become: true
  changed_when: false

- name: Kill any process using this port
  when: port_scan.stdout_lines | length > 0
  ansible.builtin.command: "kill {{ port_scan.stdout }}"
  become: true

- name: Execute python script
  ansible.builtin.shell: |
    cd {{ http_server_path }}
    python3 server.py &> /dev/null &
    echo $!
  register: python_script_out
  tags:
    - skip_ansible_lint # ugh.  This is a hack to get around the fact that we're running a background process
